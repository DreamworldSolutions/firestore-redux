version: 2
jobs:
  merge-to-development:
    machine: true
    steps:
      - run:
          name: Clone Repository
          working_directory: ~/workdir
          command: |
            echo "PR IS::"
            echo $CIRCLE_PULL_REQUEST
            if [[ -n ${CIRCLE_PULL_REQUEST} ]]
            then
              git clone https://${GH_TOKEN}@github.com/DreamworldSolutions/$CIRCLE_PROJECT_REPONAME.git  my-repo
            else
              echo "No PR Attached, so not doing anything"
            fi
      - run:
          name: Merge PR branch to development
          working_directory: ~/workdir/my-repo
          command: |
            if [[ -n ${CIRCLE_PULL_REQUEST} ]]
            then
              # circleci has 2.14.x as of now!
              git --version
              git config credential.helper 'cache --timeout=120'
              git config user.email "dw-devops@dreamworld.solutions"
              git config user.name "DW Devops"
              git remote set-url --push origin https://${GH_TOKEN}@github.com/DreamworldSolutions/$CIRCLE_PROJECT_REPONAME.git
              (git checkout -b feature/development origin/master || true)
              (git pull origin feature/development || true)
              git merge origin/$CIRCLE_BRANCH --no-ff --no-edit
              git push origin feature/development
              # Push quietly to prevent showing the token in log
              git push -q origin feature/development
            else
              echo "No PR Attached, so not doing anything."
            fi
            
  release-snapshot:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: yarn install --production=true --flat --non-ineractive
      - run: yarn install --production=false --non-interactive
      - run:
          name: Deploy
          command: |
            export NPM_TOKEN=${SNAPSHOT_NPM_TOKEN}
            npm config set ${NPM_PACKAGE_SCOPE}:registry ${NPM_SNAPSHOT_REPO}
            npx semantic-release
  release:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: yarn install --production=true --flat --non-ineractive
      - run: yarn install --production=false --non-interactive
      - run: echo "Running release job"
      - run:
          name: Deploy
          command: npx semantic-release


workflows:
  version: 2
  merge-to-development:
    jobs:
      - merge-to-development:
          context: Dreamworld
          filters:
            branches:
              ignore:
                - master
                - feature/development
  release:
    jobs:
      - release-snapshot:
          context: Dreamworld
          filters:
            branches:
              only:
                - feature/development
      - release:
          context: Dreamworld
          filters:
              branches:
                only:
                  - master

